/*
	事物管理 ：
				
                事物管理机制在程序开发过程中有着非常重要的作用，它可以使整个系统更加安全，保证在同一个事物中的操作具有同步性。 
                
                所谓事物就是针对数据库的一组操作，它可以由一条或多条sql语句组成，同一个事物的操作具有同步的特点，如果其中有一条语句无法执行，那么所有语句都不会执行，也就是 
                说，事物中的语句要么都执行，要么都不执行。
*/

-- 在数据库中使用事物时，必须先开启事物，开启事物的语句具体如下 ：

START transaction;

-- 事物开启之后就可以执行SQL语句，SQL语句执行成功后，需要使用相应语句提交事物，提交事物的语句具体如下 :
-- COMMIT;

-- 需要注意的是，在MySql中直接书写的SQL语句都是自动提交的，而事物中的操作语句都需要使用COMMIT语句手动提交，只有事物提交后其中的操作才会生效 。
-- 如果不想提交当前事物还可以使用相关语句取消事物(也称回滚),具体语句如下 :
-- rollback;

CREATE DATABASE chapter6;
use chapter6;

create table account(
	id int primary key not null auto_increment,
    name varchar(40),
    money float 
    
);

insert into account (name,money) values ('a',1000);
insert into account (name,money) values ('b',1000);

select * from account;

-- 模拟转钱 
START transaction;
UPDATE account set money=money-100 where name='a';
UPDATE account set money=money+100 where name='b';
commit;

SELECT * FROM account;


SET SQL_SAFE_UPDATES = 0;


/*
	事物有很严格的定义，它必须同时满足4个特性，即 原子性（Atomicity)、一致性（Consistency)、隔离性（Isolation）、持久性（Durability),也就是人们俗称的ACID标准, 
    1、原子性： 指事物必须被视为一个不可分割的最小工作单元，只有事物中所有的数据库操作都执行成功，才算整个事物执行成功，事物中如歌有任何一个SQL语句执行失败，已经执行成功的SQL语句也必须撤销。
    
    2、一致性:指事物将数据库从一种状态转变为下一种一致的状态 。
    
    3、隔离性:并发控制、可串行化、锁等，当多个用户并发访问数据库时，数据库为每一个用户开启的事物，不能被其他事物的操作数据干扰，多个并发事物之间要相互隔离。
    
    4、持久性：事物一旦提交，其所作的修改就会永久保存到数据库中，即使数据库发生故障也不应该对其有任何影响。 
    

*/

/*
	事物的隔离级别： 
		
        数据库是多线程并发访问的，所以很容易出现多个线程同时开启事物的情况，这样就会出现脏读、重复读以及幻读的情况，为了避免这种情况的发生，就需要为事物设置隔离级别。 
        
        1、Read UNCOMMITED 
			读未提交是事物中最低的级别，该级别下的事物可以读取到另一个事物中未提交的数据，也被称为脏读（Dirty read),这是相当危险的。由于该级别较低，在实际开发中避免不了任何情况，所以一般很少使用alter 
            
		
        2、READ COMMITED
			d大多数数据库管理系统的默认隔离级别都是READ COMMITED(读提交)，该级别下的事物只能读取其他事物已经提交的内容，可以避免脏读，但不能避免重复读和幻读的情况。
            不可重复读就是在事物内重复读取了别的线程已经提交的数据，但两次读取的结果不一致，原因是查询的过程中其他事物做了更新的操作；
            幻读是指在一个事物内两次查询中数据条数不一致，原因是查询的过程中其他的事物做了添加操作，这两种情况并不算错误，但有些情况下是不符合实际需求的 
            
		3、REPEARTABLE READ
           可重复读是MYSQL中的默认事物隔离级别，他可以避免脏读，不可重复度的的情况，确保同一事物的多个实例在并发读取数据时，会看到同样的数据。
           但理论上，该级别会出现幻读的情况，不过MYSQL的存储引擎通过多版本的并发控制机制解决了该问题，因此该级别是可以避免幻读的 。
           
		4、SERIALIZABLE
        可串行化是事物最高隔离级别吗，它会强制对事物进行排序，使之不会发生冲突，从而解决 脏读，幻读，重复度的问题。实际上，就是在每个读的数据行上枷锁，这个级别可能会导致大量的超时现象和锁竞争，实际中很少使用。 
        
        
        
        

*/



/*

	脏读： 一个事物读取了另外一个事物未提交的数据。
   
   不可重复读 ：是指事物中两次查询的结果不一致，原因是在查询过程中其他事物做了更新操作；不可重复读和脏读有点类似，但是脏读是读取前一个事物未提交的脏数据，不可重复度是在事物内重复读取了别的线程 已经提交的数据。 
    
    幻读：又被称为虚读，是指在一个事物内两次查询中数据条数不一致，幻读和不可重复读有些类似，同样是在两次查询过程中，不同的是，幻读是由于其他事物做了插入记录的操作，导致记录数有所增加。
    
    可串行化：是事物的最高隔离级别，它在每个读的数据行上加上锁，使之不可能相互冲突，因此会导致大量的超时现象
    
    


*/














